In directory: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests
GOROOT exported
FileName:  /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go
TestName:  Test07
Remove header for /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go
Add header for /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go: Test07
Import added at line: 4
Header added at line: 8
/home/erik/Uni/HiWi/ADVOCATE/go-patch/bin/go test -count=1 -run=Test07 .//tests
ok  	canonicalTests/tests	0.003s
Remove header for /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go
Run the analyzer for /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests//tests/advocateTrace

 $$$$$$\  $$$$$$$\  $$\    $$\  $$$$$$\   $$$$$$\   $$$$$$\ $$$$$$$$\ $$$$$$$$\ 
$$  __$$\ $$  __$$\ $$ |   $$ |$$  __$$\ $$  __$$\ $$  __$$\\__$$  __|$$  _____|
$$ /  $$ |$$ |  $$ |$$ |   $$ |$$ /  $$ |$$ /  \__|$$ /  $$ |  $$ |   $$ |      
$$$$$$$$ |$$ |  $$ |\$$\  $$  |$$ |  $$ |$$ |      $$$$$$$$ |  $$ |   $$$$$\    
$$  __$$ |$$ |  $$ | \$$\$$  / $$ |  $$ |$$ |      $$  __$$ |  $$ |   $$  __|   
$$ |  $$ |$$ |  $$ |  \$$$  /  $$ |  $$ |$$ |  $$\ $$ |  $$ |  $$ |   $$ |      
$$ |  $$ |$$$$$$$  |   \$  /    $$$$$$  |\$$$$$$  |$$ |  $$ |  $$ |   $$$$$$$$\ 
\__|  \__|\_______/     \_/     \______/  \______/ \__|  \__|  \__|   \________|



Welcome to the trace analyzer and rewriter.
This program analyzes a trace file and detects common concurrency bugs in Go programs.
It can also create a reordered trace file based on the analysis results.
Be aware, that the analysis is based on the trace file and may not be complete.
Be aware, that the analysis may contain false positives and false negatives.

If the rewrite of a trace file does not create the expected result, it can help to run the
analyzer with the -c flag to ignore the happens before relations of critical sections (mutex lock/unlock operations).
For the first analysis this is not recommended, because it increases the likelihood of false positives.


Read trace from /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/advocateTrace...
Start Analysis for all scenarios
Possible send on closed channel:
	send: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:22@492
	close: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:27@498

Analysis finished

==================== Summary ====================

-------------------- Critical -------------------

1 Possible send on closed channel:
	send: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:22@492
	close: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:27@498


-------------------- Warning --------------------

2 Possible receive on closed channel:
	recv: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:25@490
	close: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:27@498



Start rewriting trace files...
Read analysis results from /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests//results_machine.log for index 0...
Analysis results read
Possible send on closed channel:
	send: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:22@492
	close: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:27@498
Start rewriting trace for receive on closed channel...
Create new trace at /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests//rewritten_trace_1/...
Trace written


Read analysis results from /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests//results_machine.log for index 1...
Analysis results read
Possible receive on closed channel:
	recv: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:25@490
	close: /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go:27@498
Start rewriting trace for receive on closed channel...
Create new trace at /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests//rewritten_trace_2/...
Trace written


Finished Rewrite


	Number Results:  2
	Successfully rewrites:  2
	No need/not possible to rewrite:  0
	Failed rewrites:  0



Finished Analyzer
Found 2 rewritten traces
Insert replay header or /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go: Test07 for trace 1
Import added at line: 4
Header added at line: 8
/home/erik/Uni/HiWi/ADVOCATE/go-patch/bin/go test -count=1 -run=Test07 .//tests
Reading trace from rewritten_trace_1
Replay enabled

ReplayWarning: Long wait time
No traced operation has been executed for a long time.
This can be caused by a stuck replay.
Possible causes are:
    - The program was altered between recording and replay
    - The program execution path is not deterministic, e.g. its execution path is determined by a random number
    - The program execution path depends on the order of not tracked operations
    - The program execution depends on outside input, that was not exactly reproduced
If you believe, the program is still running, you can continue to wait.
If you believe, the program is stuck, you can cancel the program.
If you suspect, that one of these causes is the reason for the long wait time, you can try to change the program to avoid the problem.
If the problem persist, this message will be repeated.


Exit Replay with code  12 Replay Stuck: No traced operation has been executed for approx. 20s
FAIL	canonicalTests/tests	17.185s
FAIL
Remove header for /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go
Insert replay header or /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go: Test07 for trace 2
Import added at line: 4
Header added at line: 8
/home/erik/Uni/HiWi/ADVOCATE/go-patch/bin/go test -count=1 -run=Test07 .//tests
Reading trace from rewritten_trace_2
Replay enabled

ReplayWarning: Long wait time
No traced operation has been executed for a long time.
This can be caused by a stuck replay.
Possible causes are:
    - The program was altered between recording and replay
    - The program execution path is not deterministic, e.g. its execution path is determined by a random number
    - The program execution path depends on the order of not tracked operations
    - The program execution depends on outside input, that was not exactly reproduced
If you believe, the program is still running, you can continue to wait.
If you believe, the program is stuck, you can cancel the program.
If you suspect, that one of these causes is the reason for the long wait time, you can try to change the program to avoid the problem.
If the problem persist, this message will be repeated.


Exit Replay with code  12 Replay Stuck: No traced operation has been executed for approx. 20s
FAIL	canonicalTests/tests	17.156s
FAIL
Remove header for /home/erik/Uni/HiWi/ADVOCATE/examples/canonicalTests/tests/TN_SendAndRecOnClosed_test.go
GOROOT removed
