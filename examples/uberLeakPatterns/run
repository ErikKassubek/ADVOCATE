Unknown mode -tSelect one mode from 'run', 'stats', 'explain' or 'check'Usage: ./analyzer [mode] [options]

There are four modes of operation:
1. Analyze a trace file and create a reordered trace file based on the analysis results (Default)
2. Create an explanation for a found bug
3. Check if all concurrency elements of the program have been executed at least once
4. Create statistics about a program


1. Analyze a trace file and create a reordered trace file based on the analysis results (Default)
This mode is the default mode and analyzes a trace file and creates a reordered trace file based on the analysis results.
Usage: ./analyzer run [options]
It has the following options:
  -t [file]   Path to the trace folder to analyze or rewrite (required)
  -d [level]  Debug Level, 0 = silent, 1 = errors, 2 = info, 3 = debug (default 1)
  -f          Assume a FIFO ordering for buffered channels (default false)
  -c          Ignore happens before relations of critical sections (default false)
  -x          Do not rewrite the trace file (default false)
  -w          Do not print warnings (default false)
  -p          Do not print the results to the terminal (default false). Automatically set -x to true
  -r [folder] Path to where the result file should be saved. (default parallel to -t)
  -a          Ignore atomic operations (default false). Use to reduce memory header for large traces.
  -S          If the same bug is detected multiple times, run the replay for each of them. If not set, only the first occurence is rewritten
  -T [second] Set a timeout in seconds for the analysis
  -s [cases]  Select which analysis scenario to run, e.g. -s srd for the option s, r and d.
              If it is not set, all scenarios are run
              Options:
                  s: Send on closed channel
                  r: Receive on closed channel
                  w: Done before add on waitGroup
                  n: Close of closed channel
                  b: Concurrent receive on channel
                  l: Leaking routine
                  u: Select case without partner



2. Create an explanation for a found bug
Usage: ./analyzer explain [options]
This mode creates an explanation for a found bug in the trace file.
It has the following options:
  -t [file]   Path to the folder containing the machine readable result file (required)



3. Check if all concurrency elements of the program have been executed at least once
Usage: ./analyzer check [options]
This mode checks if all concurrency elements of the program have been executed at least once.
It has the following options:
  -R [folder] Path where the advocateResult folder created by the pipeline is located (required)
  -P [folder] Path to the program folder (required)



4. Create statistics about a program
This creates some statistics about the program and the trace
Usage: ./analyzer stats [options]
  -P [folder] Path to the program folder (required)
  -t [file]   Path to the trace folder (required)


